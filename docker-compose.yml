version: '2'

services:
  rocketchat:
    build:
      context: ./File
      dockerfile: dockerfile2
    user: root  
    cap_add:
      - NET_ADMIN
    command: >
      bash -c "
        for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=http://localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat?replicaSet=rs0
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local?replicaSet=rs0
      - MAIL_URL=smtp://smtp.email
      - OVERWRITE_SETTING_Show_Setup_Wizard=completed
      - ADMIN_USERNAME=admin
      - ADMIN_PASS=ada2d48cw9d4a6wc78da3sd486ewwvt454gdf86h54
      - ADMIN_EMAIL=admin@example.com
      - PORT_NAME=rocketchat
    depends_on:
      - mongo
    # ports:
    #   - 3000:3000
    # networks:
    #   test_network:
    #     ipv4_address: 192.16.238.30

    

  mongo:
    image: mongo:4.2.8
    restart: unless-stopped
    volumes:
      - ./data/db:/data/db
    command: mongod --replSet rs0 --oplogSize 128
    ports:
      - 27017:27017
    environment:
      - PORT_NAME=MongoDB

  mongo-init-replica:
    image: mongo:4.2.8
    command: >
      bash -c "sleep 5 && mongo --host mongo:27017 --eval 'rs.initiate()'"
    depends_on:
      - mongo
    restart: on-failure

  ubuntu:
    build:
      context: ./File
      dockerfile: Dockerfile
    cap_add:
      - NET_ADMIN
    depends_on:
      - mongo
    environment:
      - MONGO_URL=mongodb://mongo:27017
    ports:
      - "22:22"  # SSH
      - "20:20/tcp"  # FTP data transfer
      - "21:21/tcp"  # FTP control
      - "40000-40009:40000-40009/tcp"  # Passive FTP ports
#     networks:
#       test_network:
#         ipv4_address: 192.16.238.20


# networks:
#   test_network:
#     ipam:
#       driver: default
#       config:
#         - subnet: 192.16.238.0/24
